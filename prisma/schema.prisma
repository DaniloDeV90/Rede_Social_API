// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cadastro {
  id        String   @id @default(uuid())
  nome      String
  email     String   @unique
  password  String
  data_nasc DateTime
  profile   Profile?
  token     Token?

  @@map("cadastros")
}

model Token {
  id         String   @id @default(uuid())
  token      String
  cadastroId String   @unique
  cadastro   Cadastro @relation(fields: [cadastroId], references: [id], onDelete: Cascade)
}

model Profile {
  id          String     @id @default(uuid())
  username    String
  sexo        String
  cadastro_Id String     @unique
  cadastro    Cadastro   @relation(fields: [cadastro_Id], references: [id], onDelete: Cascade)
  ImgPerfil   ImgPerfil?
  post        Post[]
}

model ImgPerfil {
  id         String  @id @default(uuid())
  imgUrl     String?
  profile_id String  @unique
  profile    Profile @relation(fields: [profile_id], references: [id], onDelete: Cascade)
}

model Post {
  id          String        @id @default(uuid())
  profile     Profile       @relation(fields: [ProfileId], references: [id], onDelete: Cascade)
  descricao   String?
  ProfileId   String
  imgPost     ImgPost?
  created     DateTime      @default(now())
  comentarios Comentarios[]

  @@map("posts")
}

model ImgPost {
  id     String  @id @default(uuid())
  imgUrl String?
  postId String  @unique

  Post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("imgposts")
}

model Comentarios {
  id           String   @id @default(uuid())
  ProfileId    String
  nameProfile  String
  comentario   String
  idPost       String
  imgPerfilUrl String?
  postagemData DateTime @default(now())

  Post Post @relation(fields: [idPost], references: [id], onDelete: Cascade)
}
